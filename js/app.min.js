"use strict";

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
document.addEventListener('DOMContentLoaded', function () {
  // slides up/down/toggle
  var slideUpQna = function slideUpQna(target) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
    target.style.transitionProperty = 'height, margin, padding';
    target.style.transitionDuration = duration + 'ms';
    target.style.height = target.offsetHeight + 'px';
    target.offsetHeight;
    target.style.overflow = 'hidden';
    target.style.height = 0;
    target.style.paddingTop = 0;
    target.style.paddingBottom = 0;
    target.style.marginTop = 0;
    target.style.marginBottom = 0;
    if (target.previousElementSibling) {
      target.previousElementSibling.style.pointerEvents = 'none';
    }
    window.setTimeout(function () {
      target.style.display = 'none';
      target.style.removeProperty('height');
      target.style.removeProperty('padding-top');
      target.style.removeProperty('padding-bottom');
      target.style.removeProperty('margin-top');
      target.style.removeProperty('margin-bottom');
      target.style.removeProperty('overflow');
      target.style.removeProperty('transition-duration');
      target.style.removeProperty('transition-property');
      if (target.previousElementSibling) {
        target.previousElementSibling.style.pointerEvents = 'auto';
      }
    }, duration);
    target.parentNode.classList.remove('is--open');
  };
  var slideDownQna = function slideDownQna(target) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
    target.style.removeProperty('display');
    var display = window.getComputedStyle(target).display;
    if (display === 'none') display = 'block';
    target.style.display = display;
    var height = target.offsetHeight;
    target.style.overflow = 'hidden';
    target.style.height = 0;
    target.style.paddingTop = 0;
    target.style.paddingBottom = 0;
    target.style.marginTop = 0;
    target.style.marginBottom = 0;
    target.offsetHeight;
    target.style.transitionProperty = "height, margin, padding";
    target.style.transitionDuration = duration + 'ms';
    target.style.height = height + 'px';
    target.style.removeProperty('padding-top');
    target.style.removeProperty('padding-bottom');
    target.style.removeProperty('margin-top');
    target.style.removeProperty('margin-bottom');
    if (target.previousElementSibling) {
      target.previousElementSibling.style.pointerEvents = 'none';
    }
    window.setTimeout(function () {
      target.style.removeProperty('height');
      target.style.removeProperty('overflow');
      target.style.removeProperty('transition-duration');
      target.style.removeProperty('transition-property');
      if (target.previousElementSibling) {
        target.previousElementSibling.style.pointerEvents = 'auto';
      }
    }, duration);
    target.parentNode.classList.add('is--open');
  };
  var slideToggleQna = function slideToggleQna(target) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
    if (window.getComputedStyle(target).display === 'none') {
      return slideDownQna(target, duration);
    } else {
      return slideUpQna(target, duration);
    }
  };

  // inputmask
  Inputmask().mask(document.querySelectorAll('input'));

  // accordeons
  var equipmentTrigger = document.querySelectorAll('.equipment__trigger');
  var costTrigger = document.querySelectorAll('.cost__trigger');
  if (equipmentTrigger) {
    equipmentTrigger.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        console.log('click');
        if (window.innerWidth <= 1023) {
          if (!item.parentNode.classList.contains('is--open')) {
            slideDownQna(item.nextElementSibling);
          } else {
            slideUpQna(item.nextElementSibling);
          }
        }
      });
    });
  }
  if (costTrigger) {
    costTrigger.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        if (window.innerWidth <= 1023) {
          if (!item.parentNode.classList.contains('is--open')) {
            slideDownQna(item.nextElementSibling);
          } else {
            slideUpQna(item.nextElementSibling);
          }
        }
      });
    });
  }

  // mobile menu
  var header = document.getElementById('header');
  var mobileMenu = document.getElementById('menu');
  var mobileMenuTrigger = document.getElementById('hamburger-toggle');
  if (mobileMenu && mobileMenuTrigger) {
    mobileMenuTrigger.addEventListener('click', function (event) {
      event.preventDefault();
      if (mobileMenu.classList.contains('is--active')) {
        header.classList.remove('is--menu');
        mobileMenuTrigger.classList.remove('is--active');
        mobileMenu.classList.remove('is--active');
        document.body.classList.remove('scroll-disabled');
      } else {
        header.classList.add('is--menu');
        mobileMenuTrigger.classList.add('is--active');
        mobileMenu.classList.add('is--active');
        document.body.classList.add('scroll-disabled');
      }
    });
  }

  // dropdown list
  var dropdownTrigger = document.querySelectorAll('.calendar-list__more');
  var dropdownList = document.querySelectorAll('.calendar-list__wrapper');
  function dropdownListMaxHeight(lists) {
    lists.forEach(function (item) {
      var items = item.querySelectorAll('.calendar-list__item');
      var height = 0;
      var maxHeight = 0;
      for (var index = 0; index < 2; index++) {
        var style = items[index].currentStyle || window.getComputedStyle(items[index]);
        height += items[index].getBoundingClientRect().height + parseFloat(style.marginTop.slice(0, -2));
      }
      for (var _index = 0; _index < items.length; _index++) {
        var _style = items[_index].currentStyle || window.getComputedStyle(items[_index]);
        maxHeight += items[_index].getBoundingClientRect().height + parseFloat(_style.marginTop.slice(0, -2));
      }
      item.style.setProperty('--height', height + 'px');
      item.style.setProperty('--maxHeight', maxHeight + 'px');
    });
  }
  if (dropdownTrigger && window.innerWidth <= 743) {
    dropdownListMaxHeight(dropdownList);
    dropdownTrigger.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        var parent = item.closest('.calendar-list');
        var wrapper = parent.querySelector('.calendar-list__wrapper');
        if (wrapper.classList.contains('is--open')) {
          wrapper.classList.remove('is--open');
          item.innerHTML = 'Еще';
        } else {
          wrapper.classList.add('is--open');
          item.innerHTML = 'Свернуть';
        }
      });
    });
  }

  // tabs
  var equipmentTabsItems = document.querySelectorAll('.equipment-tabs__item');
  if (equipmentTabsItems) {
    equipmentTabsItems.forEach(function (item, i) {
      item.addEventListener('click', function () {
        var parent = item.closest('.equipment-tabs');
        parent.querySelectorAll('.equipment-tabs__item').forEach(function (child) {
          return child.classList.remove('is--active');
        });
        parent.querySelectorAll('.equipment-tabs__wrapper').forEach(function (child) {
          return child.classList.remove('is--active');
        });
        item.classList.add('is--active');
        var el = parent.querySelector('.is--active');
        var index = _toConsumableArray(parent.querySelectorAll('.equipment-tabs__item')).indexOf(el);
        parent.querySelectorAll('.equipment-tabs__wrapper')[index].classList.add('is--active');
      });
    });
  }

  // read also slider
  var readAlsoSlider = document.querySelector('.read-also__slider .swiper');
  if (readAlsoSlider) {
    var myReadAlsoSlider = new Swiper(readAlsoSlider, {
      slidesPerView: 3,
      breakpoints: {
        0: {
          slidesPerView: 'auto',
          spaceBetween: 5,
          centeredSlides: true
        },
        744: {
          slidesPerView: 'auto',
          spaceBetween: 45,
          centeredSlides: true
        },
        1024: {
          slidesPerView: 3,
          spaceBetween: 0,
          centeredSlides: false
        }
      }
    });
  }

  // image slider slider
  var imageSlider = document.querySelectorAll('.image-slider__slider .swiper');
  if (imageSlider) {
    imageSlider.forEach(function (slider) {
      var myImageSlider = new Swiper(slider, {
        slidesPerView: 1,
        loop: true,
        speed: 800,
        parallax: true,
        watchSlidesProgress: true,
        navigation: {
          prevEl: slider.closest('.image-slider').querySelector('.swiper-button-prev'),
          nextEl: slider.closest('.image-slider').querySelector('.swiper-button-next')
        },
        pagination: {
          el: slider.closest('.image-slider').querySelector('.swiper-pagination'),
          clickable: true
        }
      });
    });
  }

  // team slider
  var teamSlider = document.querySelectorAll('.team__slider .swiper');
  if (teamSlider) {
    teamSlider.forEach(function (slider) {
      var myTeamSlider = new Swiper(slider, {
        slidesPerView: 1,
        loop: true,
        speed: 800,
        parallax: true,
        watchSlidesProgress: true,
        navigation: {
          prevEl: slider.closest('.team__slider').querySelector('.swiper-button-prev'),
          nextEl: slider.closest('.team__slider').querySelector('.swiper-button-next')
        },
        pagination: {
          el: slider.closest('.team__slider').querySelector('.swiper-pagination'),
          clickable: true
        }
      });
    });
  }

  // checklist slider
  var checklistSlider = document.querySelector('.checklist__slider .swiper');
  if (checklistSlider) {
    var myChecklistSlider = new Swiper(checklistSlider, {
      slidesPerView: 1,
      loop: true,
      speed: 800,
      parallax: true,
      watchSlidesProgress: true,
      navigation: {
        prevEl: checklistSlider.closest('.checklist__slider').querySelector('.swiper-button-prev'),
        nextEl: checklistSlider.closest('.checklist__slider').querySelector('.swiper-button-next')
      },
      pagination: {
        el: checklistSlider.closest('.checklist__slider').querySelector('.swiper-pagination'),
        clickable: true
      }
    });
  }

  // reviews slider
  var reviewsSlider = document.querySelector('.reviews__slider .swiper');
  if (reviewsSlider) {
    var myReviewsSlider = new Swiper(reviewsSlider, {
      slidesPerView: 1,
      loop: true,
      speed: 800,
      navigation: {
        prevEl: reviewsSlider.closest('.reviews').querySelector('.swiper-button-prev'),
        nextEl: reviewsSlider.closest('.reviews').querySelector('.swiper-button-next')
      },
      pagination: {
        el: reviewsSlider.closest('.reviews').querySelector('.swiper-pagination'),
        clickable: true
      },
      breakpoints: {
        0: {
          spaceBetween: 40
        },
        430: {
          spaceBetween: 40
        },
        744: {
          spaceBetween: 0
        }
      }
    });
  }
});