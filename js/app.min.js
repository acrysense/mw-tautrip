"use strict";

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
document.addEventListener('DOMContentLoaded', function () {
  // slides up/down/toggle
  var slideUpQna = function slideUpQna(target) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
    target.style.transitionProperty = 'height, margin, padding';
    target.style.transitionDuration = duration + 'ms';
    target.style.height = target.offsetHeight + 'px';
    target.offsetHeight;
    target.style.overflow = 'hidden';
    target.style.height = 0;
    target.style.paddingTop = 0;
    target.style.paddingBottom = 0;
    target.style.marginTop = 0;
    target.style.marginBottom = 0;
    if (target.previousElementSibling) {
      target.previousElementSibling.style.pointerEvents = 'none';
    }
    window.setTimeout(function () {
      target.style.display = 'none';
      target.style.removeProperty('height');
      target.style.removeProperty('padding-top');
      target.style.removeProperty('padding-bottom');
      target.style.removeProperty('margin-top');
      target.style.removeProperty('margin-bottom');
      target.style.removeProperty('overflow');
      target.style.removeProperty('transition-duration');
      target.style.removeProperty('transition-property');
      if (target.previousElementSibling) {
        target.previousElementSibling.style.pointerEvents = 'auto';
      }
    }, duration);
    target.parentNode.classList.remove('is--open');
  };
  var slideDownQna = function slideDownQna(target) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
    target.style.removeProperty('display');
    var display = window.getComputedStyle(target).display;
    if (display === 'none') display = 'block';
    target.style.display = display;
    var height = target.offsetHeight;
    target.style.overflow = 'hidden';
    target.style.height = 0;
    target.style.paddingTop = 0;
    target.style.paddingBottom = 0;
    target.style.marginTop = 0;
    target.style.marginBottom = 0;
    target.offsetHeight;
    target.style.transitionProperty = "height, margin, padding";
    target.style.transitionDuration = duration + 'ms';
    target.style.height = height + 'px';
    target.style.removeProperty('padding-top');
    target.style.removeProperty('padding-bottom');
    target.style.removeProperty('margin-top');
    target.style.removeProperty('margin-bottom');
    if (target.previousElementSibling) {
      target.previousElementSibling.style.pointerEvents = 'none';
    }
    window.setTimeout(function () {
      target.style.removeProperty('height');
      target.style.removeProperty('overflow');
      target.style.removeProperty('transition-duration');
      target.style.removeProperty('transition-property');
      if (target.previousElementSibling) {
        target.previousElementSibling.style.pointerEvents = 'auto';
      }
    }, duration);
    target.parentNode.classList.add('is--open');
  };
  var slideToggleQna = function slideToggleQna(target) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
    if (window.getComputedStyle(target).display === 'none') {
      return slideDownQna(target, duration);
    } else {
      return slideUpQna(target, duration);
    }
  };

  // inputmask
  // Inputmask().mask(document.querySelectorAll('input'))
  var inputmaskInputs = document.querySelectorAll('input[type="tel"]');
  var im = new Inputmask('+7 (999) 999-99-99');
  im.mask(inputmaskInputs);

  // accordeons
  var equipmentTrigger = document.querySelectorAll('.equipment__trigger');
  var costTrigger = document.querySelectorAll('.cost__trigger');
  if (equipmentTrigger) {
    equipmentTrigger.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        console.log('click');
        if (window.innerWidth <= 1023) {
          if (!item.parentNode.classList.contains('is--open')) {
            slideDownQna(item.nextElementSibling);
          } else {
            slideUpQna(item.nextElementSibling);
          }
        }
      });
    });
  }
  if (costTrigger) {
    costTrigger.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        if (window.innerWidth <= 1023) {
          if (!item.parentNode.classList.contains('is--open')) {
            slideDownQna(item.nextElementSibling);
          } else {
            slideUpQna(item.nextElementSibling);
          }
        }
      });
    });
  }

  // mobile menu
  var header = document.getElementById('header');
  var mobileMenu = document.getElementById('menu');
  var mobileMenuTrigger = document.getElementById('hamburger-toggle');
  if (mobileMenu && mobileMenuTrigger) {
    mobileMenuTrigger.addEventListener('click', function (event) {
      event.preventDefault();
      if (mobileMenu.classList.contains('is--active')) {
        header.classList.remove('is--menu');
        mobileMenuTrigger.classList.remove('is--active');
        mobileMenu.classList.remove('is--active');
        document.body.classList.remove('scroll-disabled');
      } else {
        if (calendarFilter && calendarFilterTrigger) {
          if (calendarFilter.classList.contains('is--active')) {
            calendarFilterTrigger.classList.remove('is--active');
            calendarFilter.classList.remove('is--active');
            setTimeout(function () {
              mobileMenuTrigger.classList.add('is--active');
              mobileMenu.classList.add('is--active');
            }, 450);
          } else {
            header.classList.add('is--menu');
            mobileMenuTrigger.classList.add('is--active');
            mobileMenu.classList.add('is--active');
            document.body.classList.add('scroll-disabled');
          }
        } else {
          header.classList.add('is--menu');
          mobileMenuTrigger.classList.add('is--active');
          mobileMenu.classList.add('is--active');
          document.body.classList.add('scroll-disabled');
        }
      }
    });
  }

  // mobile calendar filter
  var calendarFilter = document.querySelector('.calendar-filter__wrapper');
  var calendarFilterTrigger = document.getElementById('calendar-toggle');
  var calendarFilterBtns = document.querySelectorAll('.calendar-filter__btn');
  if (calendarFilter && calendarFilterTrigger) {
    calendarFilterTrigger.addEventListener('click', function (event) {
      event.preventDefault();
      if (calendarFilter.classList.contains('is--active')) {
        header.classList.remove('is--menu');
        calendarFilterTrigger.classList.remove('is--active');
        calendarFilter.classList.remove('is--active');
        document.body.classList.remove('scroll-disabled');
      } else {
        if (mobileMenu && mobileMenuTrigger) {
          if (mobileMenu.classList.contains('is--active')) {
            mobileMenuTrigger.classList.remove('is--active');
            mobileMenu.classList.remove('is--active');
            setTimeout(function () {
              calendarFilterTrigger.classList.add('is--active');
              calendarFilter.classList.add('is--active');
            }, 450);
          } else {
            header.classList.add('is--menu');
            calendarFilterTrigger.classList.add('is--active');
            calendarFilter.classList.add('is--active');
            document.body.classList.add('scroll-disabled');
          }
        } else {
          header.classList.add('is--menu');
          calendarFilterTrigger.classList.add('is--active');
          calendarFilter.classList.add('is--active');
          document.body.classList.add('scroll-disabled');
        }
      }
    });
    if (calendarFilterBtns) {
      calendarFilterBtns.forEach(function (item) {
        item.addEventListener('click', function (event) {
          if (window.innerWidth <= 743) {
            if (calendarFilter.classList.contains('is--active')) {
              header.classList.remove('is--menu');
              calendarFilterTrigger.classList.remove('is--active');
              calendarFilter.classList.remove('is--active');
              document.body.classList.remove('scroll-disabled');
            }
          }
        });
      });
    }
  }

  // dropdown list
  var dropdownTrigger = document.querySelectorAll('.calendar-list__more');
  var dropdownList = document.querySelectorAll('.calendar-list__wrapper');
  function dropdownListMaxHeight(lists) {
    lists.forEach(function (item) {
      var items = item.querySelectorAll('.calendar-list__item');
      var height = 0;
      var maxHeight = 0;
      for (var index = 0; index < 2; index++) {
        var style = items[index].currentStyle || window.getComputedStyle(items[index]);
        height += items[index].getBoundingClientRect().height + parseFloat(style.marginTop.slice(0, -2));
      }
      for (var _index = 0; _index < items.length; _index++) {
        var _style = items[_index].currentStyle || window.getComputedStyle(items[_index]);
        maxHeight += items[_index].getBoundingClientRect().height + parseFloat(_style.marginTop.slice(0, -2));
      }
      item.style.setProperty('--height', height + 'px');
      item.style.setProperty('--maxHeight', maxHeight + 'px');
    });
  }
  if (dropdownTrigger && window.innerWidth <= 743) {
    dropdownListMaxHeight(dropdownList);
    dropdownTrigger.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        var parent = item.closest('.calendar-list');
        var wrapper = parent.querySelector('.calendar-list__wrapper');
        if (wrapper.classList.contains('is--open')) {
          wrapper.classList.remove('is--open');
          item.innerHTML = 'Еще';
        } else {
          wrapper.classList.add('is--open');
          item.innerHTML = 'Свернуть';
        }
      });
    });
  }

  // iframe loading
  var contentVideoIframe = document.querySelectorAll('.content-video__media');
  if (contentVideoIframe) {
    contentVideoIframe.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        var parent = item.closest('.content-video');
        if (!parent.classList.contains('is--active')) {
          parent.classList.add('is--active');
          var frame = parent.querySelector('iframe');
          var link = frame.dataset.src + '&autoplay=1';
          frame.setAttribute('src', link);
          frame.removeAttribute('data-src');
        }
      });
    });
  }

  // tabs
  var equipmentTabsItems = document.querySelectorAll('.equipment-tabs__item');
  if (equipmentTabsItems) {
    equipmentTabsItems.forEach(function (item, i) {
      item.addEventListener('click', function () {
        var parent = item.closest('.equipment-tabs');
        parent.querySelectorAll('.equipment-tabs__item').forEach(function (child) {
          return child.classList.remove('is--active');
        });
        parent.querySelectorAll('.equipment-tabs__wrapper').forEach(function (child) {
          return child.classList.remove('is--active');
        });
        item.classList.add('is--active');
        var el = parent.querySelector('.is--active');
        var index = _toConsumableArray(parent.querySelectorAll('.equipment-tabs__item')).indexOf(el);
        parent.querySelectorAll('.equipment-tabs__wrapper')[index].classList.add('is--active');
      });
    });
  }

  // calendar
  var customDropdownCalendars = document.querySelectorAll('.calendar-dropdown-js');
  if (customDropdownCalendars) {
    customDropdownCalendars.forEach(function (item) {
      flatpickr(item, {
        mode: "range",
        minDate: "today",
        dateFormat: "d M",
        altInput: true,
        altFormat: "d M",
        locale: 'ru',
        prevArrow: '<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M11 2L6 8L11 14" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>',
        nextArrow: '<svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6 14L11 8L6 2" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/></svg>',
        onOpen: function onOpen(selectedDates, dateStr, instance) {
          instance.input.closest('.calendar-filter__calendar').classList.add('is--active');
          setTimeout(function () {
            var calendar = instance.calendarContainer;
            var input = instance.input;
            var inputRect = input.closest('.calendar-filter__item').getBoundingClientRect();
            var calendarWidth = calendar.offsetWidth;
            calendar.style.left = "".concat(inputRect.left + inputRect.width / 2 - calendarWidth / 2, "px");
            calendar.style.top = "".concat(inputRect.bottom + window.scrollY, "px");
            addFooterButtons(instance);
          }, 0);
        },
        onClose: function onClose(selectedDates, dateStr, instance) {
          instance.input.closest('.calendar-filter__calendar').classList.remove('is--active');
          instance.input.closest('.calendar-filter__calendar').classList.remove('active-datepicker');
        }
      });
      function addFooterButtons(instance) {
        var calendar = instance.calendarContainer;
        var footer = calendar.querySelector('.flatpickr-footer');
        if (!footer) {
          footer = document.createElement('div');
          footer.className = 'flatpickr-footer';
          // footer.innerHTML = `
          //     <button type="button" class="flatpickr-confirm">Выбрать</button>
          //     <button type="button" class="flatpickr-cancel">Отмена</button>
          // `;
          footer.innerHTML = "\n                        <button type=\"button\" class=\"flatpickr-cancel\">\u041E\u0442\u043C\u0435\u043D\u0430</button>\n                    ";
          calendar.appendChild(footer);

          // footer.querySelector('.flatpickr-confirm').addEventListener('click', () => {
          //     if (instance.selectedDates.length === 2) {
          //         instance.close();
          //     } else if (instance.selectedDates.length === 1) {
          //         instance.setDate(instance.selectedDates[0], true); 
          //         instance.close();
          //     }
          // });

          footer.querySelector('.flatpickr-cancel').addEventListener('click', function () {
            instance.clear();
            instance.close();
          });
        }
      }
    });
  }

  // fire
  var paths = document.querySelectorAll('.search-adventure__img svg path');
  var groups = [[], [], []];
  var currentGroup = 0;
  if (paths) {
    paths.forEach(function (path, index) {
      groups[index % 3].push(path);
    });
    setInterval(function () {
      groups.forEach(function (group, index) {
        group.forEach(function (path) {
          path.classList.toggle('hidden', index !== currentGroup);
          path.classList.toggle('visible', index === currentGroup);
        });
      });
      currentGroup = (currentGroup + 1) % 3;
    }, 400);
  }

  // balloon animation
  var ball = document.querySelector('.statistics__img-balloon');
  if (ball) {
    var getRandomX = function getRandomX() {
      return Math.random() * (document.querySelector('.statistics__img').getBoundingClientRect().width - 132);
    };
    var startAnimation = function startAnimation() {
      var startX = getRandomX();
      ball.style.setProperty('--start-x', "".concat(startX, "px"));
    };
    startAnimation();
    ball.addEventListener('animationiteration', startAnimation);
  }

  // form validate
  var validationForms = document.querySelectorAll('.validation-form');
  var validationInputs = document.querySelectorAll('.input-field__input[data-validation="required"], .input-field__textarea[data-validation="required"]');
  if (validationForms) {
    validationForms.forEach(function (form) {
      form.addEventListener('submit', function () {
        if (validateForm(form)) {
          console.log('Form submitted successfully!');
        } else {
          event.preventDefault();
        }
      });
    });
  }
  if (validationInputs) {
    validationInputs.forEach(function (input) {
      input.addEventListener('blur', validateFieldOnBlur);
    });
  }
  function isValidEmail(email) {
    var emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailPattern.test(email);
  }
  function isValidPhone(phone) {
    var phonePattern = /^\+7 \(\d{3}\) \d{3}-\d{2}-\d{2}$/;
    return phonePattern.test(phone);
  }
  function validateForm(form) {
    var inputs = form.querySelectorAll('.input-field__input[data-validation="required"], .input-field__textarea[data-validation="required"]');
    var errorElements = form.querySelectorAll('.input-field');
    errorElements.forEach(function (errorElement) {
      return errorElement.classList.remove('is--error');
    });
    var isValid = true;
    inputs.forEach(function (input) {
      var parent = input.closest('.input-field');
      if (input.value.trim() === '') {
        parent.classList.add('is--error');
        isValid = false;
      } else if (input.type === 'email' && !isValidEmail(input.value.trim())) {
        parent.classList.add('is--error');
        isValid = false;
      } else if (input.type === 'tel' && !isValidPhone(input.value.trim())) {
        parent.classList.add('is--error');
        isValid = false;
      }
    });
    return isValid;
  }
  function validateFieldOnBlur(event) {
    var input = event.target;
    var parent = input.closest('.input-field');
    if (input.value.trim() !== '') {
      if (input.type === 'email' && !isValidEmail(input.value.trim())) {
        parent.classList.add('is--error');
      } else if (input.type === 'tel' && !isValidPhone(input.value.trim())) {
        parent.classList.add('is--error');
      } else {
        parent.classList.remove('is--error');
      }
    } else {
      parent.classList.add('is--error');
    }
  }

  // read also slider
  var readAlsoSlider = document.querySelector('.read-also__slider .swiper');
  if (readAlsoSlider) {
    var myReadAlsoSlider = new Swiper(readAlsoSlider, {
      slidesPerView: 3,
      breakpoints: {
        0: {
          slidesPerView: 'auto',
          spaceBetween: 5,
          centeredSlides: true
        },
        744: {
          slidesPerView: 'auto',
          spaceBetween: 45,
          centeredSlides: true
        },
        1024: {
          slidesPerView: 3,
          spaceBetween: 0,
          centeredSlides: false
        }
      }
    });
  }

  // image slider slider
  var imageSlider = document.querySelectorAll('.image-slider__slider .swiper');
  if (imageSlider) {
    imageSlider.forEach(function (slider) {
      var myImageSlider = new Swiper(slider, {
        slidesPerView: 1,
        loop: true,
        speed: 800,
        parallax: true,
        watchSlidesProgress: true,
        navigation: {
          prevEl: slider.closest('.image-slider').querySelector('.swiper-button-prev'),
          nextEl: slider.closest('.image-slider').querySelector('.swiper-button-next')
        },
        pagination: {
          el: slider.closest('.image-slider').querySelector('.swiper-pagination'),
          clickable: true
        }
      });
    });
  }

  // team slider
  var teamSlider = document.querySelectorAll('.team__slider .swiper');
  if (teamSlider) {
    teamSlider.forEach(function (slider) {
      var myTeamSlider = new Swiper(slider, {
        slidesPerView: 1,
        loop: true,
        speed: 800,
        parallax: true,
        watchSlidesProgress: true,
        navigation: {
          prevEl: slider.closest('.team__slider').querySelector('.swiper-button-prev'),
          nextEl: slider.closest('.team__slider').querySelector('.swiper-button-next')
        },
        pagination: {
          el: slider.closest('.team__slider').querySelector('.swiper-pagination'),
          clickable: true
        }
      });
    });
  }

  // checklist slider
  var checklistSlider = document.querySelector('.checklist__slider .swiper');
  if (checklistSlider) {
    var myChecklistSlider = new Swiper(checklistSlider, {
      slidesPerView: 1,
      loop: true,
      speed: 800,
      parallax: true,
      watchSlidesProgress: true,
      navigation: {
        prevEl: checklistSlider.closest('.checklist__slider').querySelector('.swiper-button-prev'),
        nextEl: checklistSlider.closest('.checklist__slider').querySelector('.swiper-button-next')
      },
      pagination: {
        el: checklistSlider.closest('.checklist__slider').querySelector('.swiper-pagination'),
        clickable: true
      }
    });
  }

  // reviews slider
  var reviewsSlider = document.querySelector('.reviews__slider .swiper');
  if (reviewsSlider) {
    var myReviewsSlider = new Swiper(reviewsSlider, {
      slidesPerView: 1,
      loop: true,
      speed: 800,
      navigation: {
        prevEl: reviewsSlider.closest('.reviews').querySelector('.swiper-button-prev'),
        nextEl: reviewsSlider.closest('.reviews').querySelector('.swiper-button-next')
      },
      pagination: {
        el: reviewsSlider.closest('.reviews').querySelector('.swiper-pagination'),
        clickable: true
      },
      breakpoints: {
        0: {
          spaceBetween: 40
        },
        430: {
          spaceBetween: 40
        },
        744: {
          spaceBetween: 0
        }
      }
    });
  }
});